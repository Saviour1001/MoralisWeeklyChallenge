{"version":3,"sources":["providers/MoralisDappProvider/context.js","providers/MoralisDappProvider/MoralisDappProvider.js","helpers/formatters.js","components/Blockie.jsx","components/Address/Address.jsx","helpers/networks.js","components/Account.jsx","components/Chains/Logos.jsx","components/Chains/Chains.jsx","components/gstyles.js","components/Categories.jsx","components/Feed/components/Votes.jsx","components/Feed/components/AddComment.jsx","components/Feed/components/Comments.jsx","components/Feed/components/FeedComment.jsx","components/Feed/img/maticToken.png","components/Feed/components/Donate.jsx","components/Feed/components/Post.jsx","components/Feed/components/Posts.jsx","components/Reputation.jsx","components/Feed/components/AddPost.jsx","components/Feed/Feed.jsx","components/Main.jsx","App.jsx","index.js"],"names":["MoralisDappContext","React","createContext","MoralisDappProvider","children","useMoralis","web3","Moralis","user","useState","walletAddress","setWalletAddress","chainId","setChainId","contractABI","setContractABI","contractAddress","setContractAddress","categoryId","category","selectedCategory","setSelectedCategory","useEffect","onChainChanged","chain","onAccountsChanged","address","givenProvider","selectedAddress","get","Provider","value","useMoralisDapp","context","useContext","undefined","Error","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","currency","getEllipsisTxt","str","n","substr","length","Blockie","props","currentWallet","seed","toLowerCase","className","styles","height","display","gap","backgroundColor","borderRadius","alignItems","Address","setAddress","isClicked","setIsClicked","Copy","xmlns","width","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","cursor","onClick","navigator","clipboard","writeText","d","id","avatar","size","copyable","Check","networkConfigs","currencySymbol","blockExplorerUrl","wrapped","chainName","currencyName","rpcUrl","getExplorer","account","padding","justifyContent","text","color","Account","authenticate","isAuthenticated","logout","isModalVisible","setIsModalVisible","marginRight","scale","visible","footer","onCancel","bodyStyle","fontSize","fontWeight","marginTop","href","target","rel","SelectOutlined","type","signingMessage","PolygonLogo","item","fontFamily","button","border","menuItems","key","icon","Chains","useChain","switchNetwork","selected","setSelected","console","log","newSelected","find","menu","e","map","Item","marginLeft","position","overlay","trigger","DownOutlined","textAlign","glStyles","card","boxShadow","Categories","categories","filter","selectCategory","mode","ItemGroup","title","Votes","postId","postVotes","setPostVotes","contractABIJson","JSON","parse","data","useMoralisQuery","query","equalTo","live","options","functionName","abi","params","_postId","a","enableWeb3","executeFunction","result","getPostVotes","AddComment","ipfsProcessor","useMoralisFile","contractProcessor","useWeb3ExecuteFunction","file","setFile","content","setContent","comment","processContent","contentUri","_parentId","parentId","_contentUri","_categoryId","fetch","onSuccess","message","success","onError","error","processImage","imageUrl","image","saveFile","base64","btoa","stringify","saveIPFS","ipfsResult","_ipfs","onSubmit","preventDefault","addComment","placeholder","rows","onChange","files","Posts","queryPost","fetchedPosts","reverse","post","Feed","Donate","tx","setTx","amount","setAmount","postDonates","setpostDonates","isPending","setIsPending","donate","postOwner","options1","_reputationAdded","options2","Units","ETH","receiver","transfer","getPostDonates","margin","borderColor","background","borderWidth","loading","DoDonate","disabled","alt","src","Matic","Post","showAddComment","setShowAddComment","contentId","postContent","setPosContent","voteStatus","setVoteStatus","votes","vote","direction","extractUri","fetchIPFSDoc","ipfsHash","url","response","json","forEach","voter","up","getPostVoteStatus","actions","marginBottom","shape","paddingRight","paddingLeft","createElement","LikeFilled","LikeOutlined","DislikeFilled","DislikeOutlined","strong","havePosts","emptyResult","postResult","Reputation","reputationValue","setReputation","_address","_categoryID","getReputation","AddPost","setTitle","addPost","showAddPost","setShowAddPost","Title","Typography","Paragraph","verticalAlign","level","paddingBottom","Main","queryCategories","fetchedCategories","maxWidth","Header","Layout","header","zIndex","borderBottom","headerRight","Logo","App","isServerInfo","isWeb3Enabled","isWeb3EnableLoading","overflow","path","to","APP_ID","SERVER_URL","Application","appId","serverUrl","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.be24cc8e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MoralisDappContext = React.createContext();\n\nexport default MoralisDappContext;\n","import React, { useEffect, useState } from \"react\";\nimport { useMoralis } from \"react-moralis\";\nimport MoralisDappContext from \"./context\";\n\nfunction MoralisDappProvider({ children }) {\n  const { web3, Moralis, user } = useMoralis();\n  const [walletAddress, setWalletAddress] = useState();\n  const [chainId, setChainId] = useState();\n  const [contractABI, setContractABI] = useState(\n    '[ { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"bytes32\", \"name\": \"categoryId\", \"type\": \"bytes32\" }, { \"indexed\": false, \"internalType\": \"string\", \"name\": \"category\", \"type\": \"string\" } ], \"name\": \"CategoryCreated\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"bytes32\", \"name\": \"contentId\", \"type\": \"bytes32\" }, { \"indexed\": false, \"internalType\": \"string\", \"name\": \"contentUri\", \"type\": \"string\" } ], \"name\": \"ContentAdded\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"bytes32\", \"name\": \"postId\", \"type\": \"bytes32\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"postOwner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"bytes32\", \"name\": \"parentId\", \"type\": \"bytes32\" }, { \"indexed\": false, \"internalType\": \"bytes32\", \"name\": \"contentId\", \"type\": \"bytes32\" }, { \"indexed\": false, \"internalType\": \"bytes32\", \"name\": \"categoryId\", \"type\": \"bytes32\" } ], \"name\": \"PostCreated\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"bytes32\", \"name\": \"postId\", \"type\": \"bytes32\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"postOwner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"voter\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint80\", \"name\": \"reputationPostOwner\", \"type\": \"uint80\" }, { \"indexed\": false, \"internalType\": \"uint80\", \"name\": \"reputationVoter\", \"type\": \"uint80\" }, { \"indexed\": false, \"internalType\": \"int40\", \"name\": \"postVotes\", \"type\": \"int40\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"up\", \"type\": \"bool\" }, { \"indexed\": false, \"internalType\": \"uint8\", \"name\": \"reputationAmount\", \"type\": \"uint8\" } ], \"name\": \"Voted\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"_category\", \"type\": \"string\" } ], \"name\": \"addCategory\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes32\", \"name\": \"_parentId\", \"type\": \"bytes32\" }, { \"internalType\": \"string\", \"name\": \"_contentUri\", \"type\": \"string\" }, { \"internalType\": \"bytes32\", \"name\": \"_categoryId\", \"type\": \"bytes32\" } ], \"name\": \"createPost\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes32\", \"name\": \"_categoryId\", \"type\": \"bytes32\" } ], \"name\": \"getCategory\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes32\", \"name\": \"_contentId\", \"type\": \"bytes32\" } ], \"name\": \"getContent\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes32\", \"name\": \"_postId\", \"type\": \"bytes32\" } ], \"name\": \"getPost\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }, { \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }, { \"internalType\": \"int72\", \"name\": \"\", \"type\": \"int72\" }, { \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"_address\", \"type\": \"address\" }, { \"internalType\": \"bytes32\", \"name\": \"_categoryID\", \"type\": \"bytes32\" } ], \"name\": \"getReputation\", \"outputs\": [ { \"internalType\": \"uint80\", \"name\": \"\", \"type\": \"uint80\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes32\", \"name\": \"_postId\", \"type\": \"bytes32\" }, { \"internalType\": \"uint8\", \"name\": \"_reputationTaken\", \"type\": \"uint8\" } ], \"name\": \"voteDown\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes32\", \"name\": \"_postId\", \"type\": \"bytes32\" }, { \"internalType\": \"uint8\", \"name\": \"_reputationAdded\", \"type\": \"uint8\" } ], \"name\": \"voteUp\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]'\n  );\n  const [contractAddress, setContractAddress] = useState(\n    \"0x48DE2c5B691F3BB434596206a87B56CBBccA4c85\"\n  );\n  const [selectedCategory, setSelectedCategory] = useState({\n    categoryId: \"0x91\",\n    category: \"default\",\n  });\n\n  useEffect(() => {\n    Moralis.onChainChanged(function (chain) {\n      setChainId(chain);\n    });\n\n    Moralis.onAccountsChanged(function (address) {\n      setWalletAddress(address[0]);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => setChainId(web3.givenProvider?.chainId));\n  useEffect(\n    () =>\n      setWalletAddress(\n        web3.givenProvider?.selectedAddress || user?.get(\"ethAddress\")\n      ),\n    [web3, user]\n  );\n\n  return (\n    <MoralisDappContext.Provider\n      value={{\n        walletAddress,\n        chainId,\n        selectedCategory,\n        setSelectedCategory,\n        contractABI,\n        setContractABI,\n        contractAddress,\n        setContractAddress,\n      }}\n    >\n      {children}\n    </MoralisDappContext.Provider>\n  );\n}\n\nfunction useMoralisDapp() {\n  const context = React.useContext(MoralisDappContext);\n  if (context === undefined) {\n    throw new Error(\"useMoralisDapp must be used within a MoralisDappProvider\");\n  }\n  return context;\n}\n\nexport { MoralisDappProvider, useMoralisDapp };\n","export const n6 = new Intl.NumberFormat(\"en-us\", {\n  style: \"decimal\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 6,\n});\nexport const n4 = new Intl.NumberFormat(\"en-us\", {\n  style: \"decimal\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 4,\n});\n\nexport const c2 = new Intl.NumberFormat(\"en-us\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\n/**\n * Returns a string of form \"abc...xyz\"\n * @param {string} str string to string\n * @param {number} n number of chars to keep at front/end\n * @returns {string}\n */\nexport const getEllipsisTxt = (str, n = 6) => {\n  if (str) {\n    return `${str.substr(0, n)}...${str.substr(str.length - n, str.length)}`;\n  }\n  return \"\";\n};\n\nexport const tokenValue = (value, decimals) => (decimals ? value / Math.pow(10, decimals) : value);\n\n/**\n * Return a formatted string with the symbol at the end\n * @param {number} value integer value\n * @param {number} decimals number of decimals\n * @param {string} symbol token symbol\n * @returns {string}\n */\nexport const tokenValueTxt = (value, decimals, symbol) => `${n4.format(tokenValue(value, decimals))} ${symbol}`;\n","import Blockies from \"react-blockies\";\nimport { useMoralisDapp } from \"../providers/MoralisDappProvider/MoralisDappProvider\";\n\n/**\n * Shows a blockie image for the provided wallet address\n * @param {*} props\n * @returns <Blockies> JSX Elemenet\n */\n\nfunction Blockie(props) {\n  const { walletAddress } = useMoralisDapp();\n  if ((!props.address && !props.currentWallet) || !walletAddress) return null;\n\n  return (\n    <Blockies\n      seed={props.currentWallet ? walletAddress.toLowerCase() : props.address.toLowerCase()}\n      className=\"identicon\"\n      {...props}\n    />\n  );\n}\n\nexport default Blockie;\n","import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useMoralisDapp } from \"../../providers/MoralisDappProvider/MoralisDappProvider\";\nimport { getEllipsisTxt } from \"../../helpers/formatters\";\nimport Blockie from \"../Blockie\";\nimport \"./identicon.css\";\n\nconst styles = {\n  address: {\n    height: \"36px\",\n    display: \"flex\",\n    gap: \"5px\",\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n    borderRadius: \"9px\",\n    alignItems: \"center\",\n  },\n};\n\nfunction Address(props) {\n  const { walletAddress } = useMoralisDapp();\n  const [address, setAddress] = useState();\n  const [isClicked, setIsClicked] = useState(false);\n\n  useEffect(() => {\n    setAddress(props?.address || walletAddress);\n  }, [walletAddress, props]);\n\n  if (!address) return null;\n\n  const Copy = () => (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"26\"\n      height=\"26\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth=\"2\"\n      stroke=\"#1780FF\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      style={{ cursor: \"pointer\" }}\n      onClick={() => {\n        navigator.clipboard.writeText(address);\n        setIsClicked(true);\n      }}\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M15 3v4a1 1 0 0 0 1 1h4\" />\n      <path d=\"M18 17h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h4l5 5v7a2 2 0 0 1 -2 2z\" />\n      <path d=\"M16 17v2a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2\" />\n      <title id=\"copy-address\">Copy Address</title>\n    </svg>\n  );\n\n  return (\n    <div style={{ ...styles.address, ...props.style }}>\n      {props.avatar === \"left\" && <Blockie address={address} size={7} />}\n      <p>{props.size ? getEllipsisTxt(address, props.size) : address}</p>\n      {props.avatar === \"right\" && <Blockie address={address} size={7} />}\n      {props.copyable && (isClicked ? <Check /> : <Copy />)}\n    </div>\n  );\n}\n\nexport default Address;\n\nconst Check = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth=\"3\"\n    stroke=\"#21BF96\"\n    fill=\"none\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M5 12l5 5l10 -10\" />\n    <title id=\"copied-address\">Copied!</title>\n  </svg>\n);\n","export const networkConfigs = {\n  \"0x1\": {\n    currencySymbol: \"ETH\",\n    blockExplorerUrl: \"https://etherscan.io/\",\n    wrapped: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n  },\n  \"0x3\": {\n    currencySymbol: \"ETH\",\n    blockExplorerUrl: \"https://ropsten.etherscan.io/\",\n  },\n  \"0x4\": {\n    currencySymbol: \"ETH\",\n    blockExplorerUrl: \"https://kovan.etherscan.io/\",\n  },\n  \"0x2a\": {\n    currencySymbol: \"ETH\",\n    blockExplorerUrl: \"https://rinkeby.etherscan.io/\",\n  },\n  \"0x5\": {\n    currencySymbol: \"ETH\",\n    blockExplorerUrl: \"https://goerli.etherscan.io/\",\n  },\n  \"0x539\": {\n    chainName: \"Local Chain\",\n    currencyName: \"ETH\",\n    currencySymbol: \"ETH\",\n    rpcUrl: \"http://127.0.0.1:7545\",\n  },\n  \"0xa86a\": {\n    chainId: 43114,\n    chainName: \"Avalanche Mainnet\",\n    currencyName: \"AVAX\",\n    currencySymbol: \"AVAX\",\n    rpcUrl: \"https://api.avax.network/ext/bc/C/rpc\",\n    blockExplorerUrl: \"https://cchain.explorer.avax.network/\",\n  },\n  \"0x38\": {\n    chainId: 56,\n    chainName: \"Smart Chain\",\n    currencyName: \"BNB\",\n    currencySymbol: \"BNB\",\n    rpcUrl: \"https://bsc-dataseed.binance.org/\",\n    blockExplorerUrl: \"https://bscscan.com/\",\n    wrapped: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n  },\n  \"0x61\": {\n    chainId: 97,\n    chainName: \"Smart Chain - Testnet\",\n    currencyName: \"BNB\",\n    currencySymbol: \"BNB\",\n    rpcUrl: \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\n    blockExplorerUrl: \"https://testnet.bscscan.com/\",\n  },\n  \"0x89\": {\n    chainId: 137,\n    chainName: \"Polygon Mainnet\",\n    currencyName: \"MATIC\",\n    currencySymbol: \"MATIC\",\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com/\",\n    blockExplorerUrl: \"https://explorer-mainnet.maticvigil.com/\",\n    wrapped: \"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270\",\n  },\n  \"0x13881\": {\n    chainId: 80001,\n    chainName: \"Mumbai\",\n    currencyName: \"MATIC\",\n    currencySymbol: \"MATIC\",\n    rpcUrl: \"https://rpc-mumbai.matic.today/\",\n    blockExplorerUrl: \"https://mumbai.polygonscan.com/\",\n  },\n};\n\nexport const getNativeByChain = (chain) =>\n  networkConfigs[chain]?.currencySymbol || \"NATIVE\";\n\nexport const getChainById = (chain) => networkConfigs[chain]?.chainId || null;\n\nexport const getExplorer = (chain) => networkConfigs[chain]?.blockExplorerUrl;\n\nexport const getWrappedNative = (chain) =>\n  networkConfigs[chain]?.wrapped || null;\n","import { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { useMoralis } from \"react-moralis\";\nimport { getEllipsisTxt } from \"helpers/formatters\";\nimport Blockie from \"./Blockie\";\nimport { Button, Card, Modal } from \"antd\";\nimport { useState } from \"react\";\nimport Address from \"./Address/Address\";\nimport { SelectOutlined } from \"@ant-design/icons\";\nimport { getExplorer } from \"helpers/networks\";\nconst styles = {\n  account: {\n    height: \"42px\",\n    padding: \"0 15px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"fit-content\",\n    borderRadius: \"12px\",\n    backgroundColor: \"rgb(244, 244, 244)\",\n    cursor: \"pointer\",\n  },\n  text: {\n    color: \"#21BF96\",\n  },\n};\n\nfunction Account() {\n  const { authenticate, isAuthenticated, logout } = useMoralis();\n  const { walletAddress, chainId } = useMoralisDapp();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  if (!isAuthenticated) {\n    return (\n      <div\n        style={styles.account}\n        onClick={() =>\n          authenticate({ signingMessage: \"Welcome to Stake Overflow!\" })\n        }\n      >\n        <p style={styles.text}>Authenticate</p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div style={styles.account} onClick={() => setIsModalVisible(true)}>\n        <p style={{ marginRight: \"5px\", ...styles.text }}>\n          {getEllipsisTxt(walletAddress, 6)}\n        </p>\n        <Blockie currentWallet scale={3} />\n      </div>\n      <Modal\n        visible={isModalVisible}\n        footer={null}\n        onCancel={() => setIsModalVisible(false)}\n        bodyStyle={{\n          padding: \"15px\",\n          fontSize: \"17px\",\n          fontWeight: \"500\",\n        }}\n        style={{ fontSize: \"16px\", fontWeight: \"500\" }}\n        width=\"400px\"\n      >\n        Account\n        <Card\n          style={{\n            marginTop: \"10px\",\n            borderRadius: \"1rem\",\n          }}\n          bodyStyle={{ padding: \"15px\" }}\n        >\n          <Address\n            avatar=\"left\"\n            size={6}\n            copyable\n            style={{ fontSize: \"20px\" }}\n          />\n          <div style={{ marginTop: \"10px\", padding: \"0 10px\" }}>\n            <a\n              href={`${getExplorer(chainId)}/address/${walletAddress}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <SelectOutlined style={{ marginRight: \"5px\" }} />\n              View on Explorer\n            </a>\n          </div>\n        </Card>\n        <Button\n          size=\"large\"\n          type=\"primary\"\n          style={{\n            width: \"100%\",\n            marginTop: \"10px\",\n            borderRadius: \"0.5rem\",\n            fontSize: \"16px\",\n            fontWeight: \"500\",\n          }}\n          onClick={() => {\n            logout();\n            setIsModalVisible(false);\n          }}\n        >\n          Disconnect Wallet\n        </Button>\n      </Modal>\n    </>\n  );\n}\n\nexport default Account;\n","export const AvaxLogo = () => (\n  <svg width=\"25\" height=\"25\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M0 10C0 4.47715 4.47715 0 10 0H20C25.5228 0 30 4.47715 30 10V20C30 25.5228 25.5228 30 20 30H10C4.47715 30 0 25.5228 0 20V10Z\"\n      fill=\"#E84142\"\n    />\n    <path\n      d=\"M20.2914 15.3898C20.8111 14.4921 21.6497 14.4921 22.1693 15.3898L25.4056 21.0709C25.9252 21.9685 25.5 22.7008 24.4607 22.7008H17.941C16.9134 22.7008 16.4882 21.9685 16.9961 21.0709L20.2914 15.3898ZM14.0315 4.45277C14.5512 3.55513 15.378 3.55513 15.8977 4.45277L16.6182 5.75198L18.3189 8.74017C18.7323 9.59056 18.7323 10.5945 18.3189 11.4449L12.6142 21.3307C12.0945 22.1339 11.2323 22.6417 10.2756 22.7008H5.53942C4.50005 22.7008 4.07485 21.9803 4.59454 21.0709L14.0315 4.45277Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n\nexport const BSCLogo = () => (\n  <svg width=\"25\" height=\"25\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M0 10C0 4.47715 4.47715 0 10 0H20C25.5228 0 30 4.47715 30 10V20C30 25.5228 25.5228 30 20 30H10C4.47715 30 0 25.5228 0 20V10Z\"\n      fill=\"#F3BA2F\"\n    />\n    <path\n      d=\"M11.3588 13.5038L15 9.8625L18.6431 13.5056L20.7619 11.3869L15 5.625L9.24 11.385L11.3588 13.5038ZM5.625 15L7.74375 12.8812L9.8625 15L7.74375 17.1188L5.625 15ZM11.3588 16.4963L15 20.1375L18.6431 16.4944L20.7619 18.6122L15 24.375L9.24 18.615L9.23719 18.6122L11.3588 16.4963ZM20.1375 15L22.2563 12.8812L24.375 15L22.2563 17.1188L20.1375 15ZM17.1488 14.9981H17.1506V15L15 17.1506L12.8522 15.0037L12.8484 15L12.8522 14.9972L13.2281 14.6203L13.4109 14.4375L15 12.8494L17.1497 14.9991L17.1488 14.9981Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n\nexport const ETHLogo = () => (\n  <svg width=\"25\" height=\"25\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M0 10C0 4.47715 4.47715 0 10 0H20C25.5228 0 30 4.47715 30 10V20C30 25.5228 25.5228 30 20 30H10C4.47715 30 0 25.5228 0 20V10Z\"\n      fill=\"#627EEA\"\n    />\n    <path\n      d=\"M15.0294 3.75V12.0656L22.0578 15.2062L15.0294 3.75Z\"\n      fill=\"white\"\n      fillOpacity=\"0.602\"\n    />\n    <path d=\"M15.0294 3.75L8 15.2062L15.0294 12.0656V3.75Z\" fill=\"white\" />\n    <path\n      d=\"M15.0294 20.595V26.2453L22.0625 16.515L15.0294 20.595Z\"\n      fill=\"white\"\n      fillOpacity=\"0.602\"\n    />\n    <path d=\"M15.0294 26.2453V20.594L8 16.515L15.0294 26.2453Z\" fill=\"white\" />\n    <path\n      d=\"M15.0294 19.2872L22.0578 15.2063L15.0294 12.0675V19.2872Z\"\n      fill=\"white\"\n      fillOpacity=\"0.2\"\n    />\n    <path d=\"M8 15.2063L15.0294 19.2872V12.0675L8 15.2063Z\" fill=\"white\" fillOpacity=\"0.602\" />\n  </svg>\n);\n\nexport const PolygonLogo = () => (\n  <svg width=\"25\" height=\"25\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M0 10C0 4.47715 4.47715 0 10 0H20C25.5228 0 30 4.47715 30 10V20C30 25.5228 25.5228 30 20 30H10C4.47715 30 0 25.5228 0 20V10Z\"\n      fill=\"#8247E5\"\n    />\n    <path\n      d=\"M20.4896 11.5015C20.1157 11.2878 19.635 11.2878 19.2077 11.5015L16.2166 13.2641L14.1869 14.3858L11.2493 16.1484C10.8754 16.362 10.3947 16.362 9.96736 16.1484L7.67062 14.7596C7.29674 14.546 7.02967 14.1187 7.02967 13.638V10.9674C7.02967 10.5401 7.24332 10.1128 7.67062 9.8457L9.96736 8.51039C10.3412 8.29674 10.822 8.29674 11.2493 8.51039L13.546 9.89911C13.9199 10.1128 14.1869 10.5401 14.1869 11.0208V12.7834L16.2166 11.6083V9.79228C16.2166 9.36499 16.003 8.93769 15.5757 8.67062L11.3027 6.16024C10.9288 5.94659 10.4481 5.94659 10.0208 6.16024L5.64095 8.72404C5.21365 8.93769 5 9.36499 5 9.79228V14.8131C5 15.2404 5.21365 15.6677 5.64095 15.9347L9.96736 18.4451C10.3412 18.6588 10.822 18.6588 11.2493 18.4451L14.1869 16.7359L16.2166 15.5608L19.1543 13.8516C19.5282 13.638 20.0089 13.638 20.4362 13.8516L22.7329 15.1869C23.1068 15.4006 23.3739 15.8279 23.3739 16.3086V18.9792C23.3739 19.4065 23.1602 19.8338 22.7329 20.1009L20.4896 21.4362C20.1157 21.6499 19.635 21.6499 19.2077 21.4362L16.911 20.1009C16.5371 19.8872 16.27 19.4599 16.27 18.9792V17.27L14.2404 18.4451V20.2077C14.2404 20.635 14.454 21.0623 14.8813 21.3294L19.2077 23.8398C19.5816 24.0534 20.0623 24.0534 20.4896 23.8398L24.816 21.3294C25.1899 21.1157 25.457 20.6884 25.457 20.2077V15.1335C25.457 14.7062 25.2433 14.2789 24.816 14.0119L20.4896 11.5015Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n","import { useEffect, useState } from \"react\";\nimport { Menu, Dropdown, Button, Modal } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport { PolygonLogo } from \"./Logos\";\nimport { useChain } from \"react-moralis\";\n\nconst styles = {\n  item: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"42px\",\n    fontWeight: \"500\",\n    fontFamily: \"Roboto, sans-serif\",\n    fontSize: \"14px\",\n    padding: \"0 10px\",\n  },\n  button: {\n    border: \"2px solid rgb(231, 234, 243)\",\n    borderRadius: \"12px\",\n  },\n};\n\nconst menuItems = [\n  \n  {\n    key: \"0x13881\",\n    value: \"Mumbai\",\n    icon: <PolygonLogo />,\n  },\n];\n\nfunction Chains() {\n  const { switchNetwork, chainId, chain } = useChain();\n  const [selected, setSelected] = useState({});\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  console.log(\"chain\", chain);\n  useEffect(() => {\n    if (!chainId) return null;\n    const newSelected = menuItems.find((item) => item.key === chainId);\n    if (!newSelected) setIsModalVisible(true);\n\n    setSelected(newSelected);\n    console.log(\"current chainId: \", chainId);\n  }, [chainId]);\n\n  const handleMenuClick = (e) => {\n    console.log(\"switch to: \", e.key);\n    switchNetwork(e.key);\n  };\n\n  const menu = (\n    <Menu onClick={handleMenuClick}>\n      {menuItems.map((item) => (\n        <Menu.Item key={item.key} icon={item.icon} style={styles.item}>\n          <span style={{ marginLeft: \"5px\" }}>{item.value}</span>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  return (\n    <div style={{position:\"relative\"}}>\n      <Dropdown overlay={menu} trigger={[\"click\"]}>\n        <Button\n          key={selected?.key}\n          icon={selected?.icon}\n          style={{ ...styles.button, ...styles.item }}\n        >\n          <span style={{ marginLeft: \"5px\" }}>{selected?.value}</span>\n          <DownOutlined />\n        </Button>\n      </Dropdown>\n      <Modal\n        visible={isModalVisible}\n        footer={null}\n        onCancel={() => setIsModalVisible(false)}\n        bodyStyle={{\n          padding: \"35px\",\n          fontSize: \"17px\",\n          fontWeight: \"500\",\n          textAlign: \"center\",\n        }}\n        style={{ fontSize: \"16px\", fontWeight: \"500\" }}\n        width=\"400px\"\n      >\n        Current Chain is not supported please switch to Polygon\n        <Button\n          size=\"large\"\n          type=\"primary\"\n          style={{\n            width: \"100%\",\n            marginTop: \"10px\",\n            borderRadius: \"0.5rem\",\n            fontSize: \"16px\",\n            fontWeight: \"500\",\n          }}\n          onClick={() => {\n            switchNetwork(\"0x13881\");\n            setIsModalVisible(false);\n          }}\n        >\n          Switch to Polygon\n        </Button>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Chains;","const glStyles = {\n    card: {\n      boxShadow: \"0 0.5rem 1.2rem rgb(189 197 209 / 20%)\",\n      backgroundColor: \"white\",\n      border: \"1px solid #e7eaf3\",\n      borderRadius: \"0.5rem\",\n      fontSize: \"16px\",\n      color: \"#1F3947\",\n    },\n  };\n  export default glStyles;","import { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { Menu } from \"antd\";\nimport glStyles from \"./gstyles\";\n\nconst Categories = ({ categories }) => {\n  const { setSelectedCategory } = useMoralisDapp();\n\n  function selectCategory(categoryId) {\n    const selectedCategory = categories.filter(\n      (category) => category[\"categoryId\"] === categoryId\n    );\n    setSelectedCategory(selectedCategory[0]);\n  }\n\n  return (\n    <div className=\"col-lg-3\">\n      <Menu\n        onClick={(e) => selectCategory(e.key)}\n        style={{ ...glStyles.card, padding: \"10px 0\" }}\n        mode=\"inline\"\n      >\n        <Menu.ItemGroup key=\"categories\" title=\"Categories\">\n          {categories.map((category) => (\n            <Menu.Item key={category[\"categoryId\"]}>\n              {category[\"category\"]}\n            </Menu.Item>\n          ))}\n        </Menu.ItemGroup>\n      </Menu>\n    </div>\n  );\n};\n\nexport default Categories;\n","import { useState, useEffect } from \"react\";\nimport { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { useMoralis, useMoralisQuery } from \"react-moralis\";\n\n\nconst Votes = ({postId}) => {\n    const {Moralis} = useMoralis();\n    const [postVotes, setPostVotes] = useState(\"0\");\n    const { contractABI, contractAddress} = useMoralisDapp();\n    const contractABIJson = JSON.parse(contractABI)\n    \n    const { data } = useMoralisQuery(\"Votes\", (query) => query.equalTo(\"postId\", postId), [], { live: true });\n    const options = {\n        contractAddress: contractAddress,\n        functionName: \"getPost\",\n        abi: contractABIJson,\n        params: {\n          _postId: postId\n        }\n      };\n    \n    useEffect(() => {\n        async function getPostVotes() {\n            await Moralis.enableWeb3;\n            const result = await Moralis.executeFunction(options);\n            setPostVotes(result[3]);\n        }\n        getPostVotes();\n    }, [data]);\n    \n    return (\n        <>\n          {postVotes}  \n        </>\n    )\n}\n\nexport default Votes\n","import { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { useMoralisFile } from \"react-moralis\";\nimport { useWeb3ExecuteFunction } from \"react-moralis\";\nimport { useState } from \"react\";\nimport { message } from \"antd\";\n\nconst AddComment = (props) => {\n  const { contractABI, contractAddress, selectedCategory } = useMoralisDapp();\n  const contractABIJson = JSON.parse(contractABI);\n  const ipfsProcessor = useMoralisFile();\n  const contractProcessor = useWeb3ExecuteFunction();\n  const [file, setFile] = useState();\n  const [content, setContent] = useState(\"\");\n\n  async function addComment(comment) {\n    const contentUri = await processContent(comment);\n    const categoryId = selectedCategory[\"categoryId\"];\n    const options = {\n      contractAddress: contractAddress,\n      functionName: \"createPost\",\n      abi: contractABIJson,\n      params: {\n        _parentId: props.parentId,\n        _contentUri: contentUri,\n        _categoryId: categoryId,\n      },\n    };\n    await contractProcessor.fetch({\n      params: options,\n      onSuccess: () => message.success(\"success\"),\n      onError: (error) => message.error(error),\n    });\n  }\n\n  const processContent = async () => {\n    const imageUrl = file !== undefined ? await processImage(file) : undefined;\n\n    const params = {\n      content: content,\n      image: imageUrl,\n    };\n    const ipfsResult = await ipfsProcessor.saveFile(\n      \"post.json\",\n      { base64: btoa(JSON.stringify(params)) },\n      { saveIPFS: true }\n    );\n    return ipfsResult._ipfs;\n  };\n\n  const processImage = async () => {\n    const ipfsResult = await ipfsProcessor.saveFile(\"image.jpg\", file, {\n      type: \"image/jpeg\",\n      saveIPFS: true,\n    });\n    return ipfsResult._ipfs;\n  };\n\n  const validateForm = () => {\n    let result = !content ? false : true;\n    return result;\n  };\n\n  const clearForm = () => {\n    setFile(\"\");\n    setContent(\"\");\n  };\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (!validateForm()) {\n      return message.error(\"Remember to add the content of your comment\");\n    }\n    addComment({ content });\n    clearForm();\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className='row'>\n        <div className='form-group'>\n          <textarea\n            type='text'\n            className='mb-2 form-control'\n            placeholder='Comment'\n            rows='1'\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n          />\n          <input\n            type='file'\n            className='mb-2 mt-2 form-control'\n            value={null}\n            onChange={async (e) => setFile(e.target.files[0])}\n          />\n        </div>\n        <button type='submit' className='btn btn-dark'>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddComment;\n","import { useMoralisQuery } from \"react-moralis\";\nimport Post from \"./Post\";\n\nconst Posts = (props) => {\n  const queryPost = useMoralisQuery(\n    \"Posts\",\n    (query) => query.equalTo(\"parentId\", props.parentId),\n    [],\n    { live: true }\n  );\n\n  const fetchedPosts = JSON.parse(\n    JSON.stringify(queryPost.data, [\"postId\", \"contentId\", \"postOwner\"])\n  ).reverse();\n\n  const postResult = (\n    <div>\n      {fetchedPosts.map((post) => (\n        <Post key={post[\"postId\"]} post={post} />\n      ))}\n    </div>\n  );\n\n  return postResult;\n};\n\nexport default Posts;\n","import Posts from \"./Comments\";\nimport glStyles from \"components/gstyles\";\nconst Feed = (props) => {\n  let result = (\n    <div>\n      <Posts\n        className='col-lg-9'\n        style={{\n          ...glStyles.card,\n          padding: \"10px 13px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n        parentId={props.parentId}\n      />\n    </div>\n  );\n\n  return result;\n};\n\nexport default Feed;","export default __webpack_public_path__ + \"static/media/maticToken.534d7899.png\";","import { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport {\n  useMoralis,\n  useMoralisQuery,\n  useWeb3ExecuteFunction,\n} from \"react-moralis\";\nimport { useEffect, useState } from \"react\";\nimport { Input, message } from \"antd\";\nimport Matic from \"../img/maticToken.png\";\n\nfunction Donate(props) {\n  const { Moralis } = useMoralis();\n  const [tx, setTx] = useState();\n  const [amount, setAmount] = useState();\n  const [postDonates, setpostDonates] = useState(\"0\");\n  const [isPending, setIsPending] = useState(false);\n  const { walletAddress, contractABI, contractAddress } = useMoralisDapp();\n  const contractABIJson = JSON.parse(contractABI);\n  const contractProcessor = useWeb3ExecuteFunction();\n\n  const { data } = useMoralisQuery(\n    \"Donates\",\n    (query) => query.equalTo(\"postId\", props.postId),\n    [],\n    {\n      live: true,\n    }\n  );\n  const options = {\n    contractAddress: contractAddress,\n    functionName: \"getPost\",\n    abi: contractABIJson,\n    params: {\n      _postId: props.postId,\n    },\n  };\n\n  useEffect(() => {\n    amount ? setTx({ amount }) : setTx();\n  }, [amount]);\n\n  useEffect(() => {\n    async function getPostDonates() {\n      await Moralis.enableWeb3;\n      const result = await Moralis.executeFunction(options);\n      setpostDonates(result[5]);\n    }\n    getPostDonates();\n  }, [data]);\n\n  async function DoDonate(donate) {\n    if (walletAddress.toLowerCase() === props.postOwner.toLowerCase())\n      return message.error(\"You cannot donate on your posts\");\n\n    const { amount } = tx;\n    const options1 = {\n      contractAddress: contractAddress,\n      functionName: donate,\n      abi: contractABIJson,\n      params: {\n        _postId: props.postId,\n        _reputationAdded: amount,\n      },\n    };\n    const options2 = {\n      type: \"native\",\n      amount: Moralis.Units.ETH(amount),\n      receiver: props.postOwner,\n    };\n\n    setIsPending(true);\n\n    await Moralis.transfer(options2);\n    await contractProcessor.fetch({\n      params: options1,\n      onSuccess: () => console.log(\"success\"),\n      onError: (error) => console.error(error),\n    });\n  }\n  var height = 5;\n  var width = 5;\n\n  return (\n    <div>\n      <Input\n        type=\"number\"\n        size=\"large\"\n        placeholder=\"Amount\"\n        style={{\n          height: \"4%\",\n          width: \"20%\",\n          margin: \"0.5rem\",\n          borderColor: \"#b8daff\",\n        }}\n        onChange={(e) => {\n          setAmount(`${e.target.value}`);\n        }}\n      />\n      <button\n        type=\"primary\"\n        size=\"large\"\n        style={{\n          height: \"4%\",\n          width: \"15\",\n          background: \"#b8daff\",\n          color: \"black\",\n          borderRadius: \"5px\",\n          borderWidth: \"2px\",\n        }}\n        loading={isPending}\n        onClick={() => DoDonate(\"donate\")}\n        disabled={!tx}\n      >\n        <span>\n          <img\n            alt=\"Matic\"\n            src={Matic}\n            style={{\n              width: \"1.5rem\",\n              height: \"1.5rem\",\n              marginLeft: \"0.5rem\",\n            }}\n          />\n        </span>\n      </button>\n      <>{postDonates}</>\n    </div>\n  );\n}\n\nexport default Donate;\n","import { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { useMoralisQuery, useWeb3ExecuteFunction } from \"react-moralis\";\nimport { useEffect, useState, createElement } from \"react\";\nimport { Comment, Tooltip, message, Divider, Button } from \"antd\";\nimport {\n  DislikeOutlined,\n  LikeOutlined,\n  DislikeFilled,\n  LikeFilled,\n} from \"@ant-design/icons\";\nimport Text from \"antd/lib/typography/Text\";\nimport glStyles from \"components/gstyles\";\nimport Votes from \"./Votes\";\nimport AddComment from \"./AddComment\";\nimport Feed from \"./FeedComment\";\nimport Donate from \"./Donate\";\n\nconst Post = ({ post }) => {\n  const [showAddComment, setShowAddComment] = useState(false);\n  const { contentId, postId, postOwner } = post;\n  const [postContent, setPosContent] = useState({\n    title: \"default\",\n    content: \"default\",\n  });\n\n  const { data } = useMoralisQuery(\"Contents\", (query) =>\n    query.equalTo(\"contentId\", contentId)\n  );\n  const [voteStatus, setVoteStatus] = useState();\n  const { data: votes } = useMoralisQuery(\n    \"Votes\",\n    (query) => query.equalTo(\"postId\", postId),\n    [],\n    {\n      live: true,\n    }\n  );\n\n  const { walletAddress, contractABI, contractAddress } = useMoralisDapp();\n  const contractABIJson = JSON.parse(contractABI);\n  const contractProcessor = useWeb3ExecuteFunction();\n\n  useEffect(() => {\n    function extractUri(data) {\n      const fetchedContent = JSON.parse(JSON.stringify(data, [\"contentUri\"]));\n      const contentUri = fetchedContent[0][\"contentUri\"];\n      return contentUri;\n    }\n    async function fetchIPFSDoc(ipfsHash) {\n      console.log(ipfsHash);\n      const url = ipfsHash;\n      const response = await fetch(url);\n      return await response.json();\n    }\n    async function processContent() {\n      const content = await fetchIPFSDoc(extractUri(data));\n      setPosContent(content);\n    }\n    if (data.length > 0) {\n      processContent();\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (!votes?.length) return null;\n\n    async function getPostVoteStatus() {\n      const fetchedVotes = JSON.parse(JSON.stringify(votes));\n      fetchedVotes.forEach(({ voter, up }) => {\n        if (voter === walletAddress) setVoteStatus(up ? \"liked\" : \"disliked\");\n      });\n      return;\n    }\n\n    getPostVoteStatus();\n  }, [votes, walletAddress]);\n\n  function toggleShowAddComment() {\n    setShowAddComment(!showAddComment);\n  }\n\n  async function vote(direction) {\n    if (walletAddress.toLowerCase() === postOwner.toLowerCase())\n      return message.error(\"You cannot vote on your posts\");\n    if (voteStatus) return message.error(\"Already voted\");\n    const options = {\n      contractAddress: contractAddress,\n      functionName: direction,\n      abi: contractABIJson,\n      params: {\n        _postId: post[\"postId\"],\n        [direction === \"voteDown\" ? \"_reputationTaken\" : \"_reputationAdded\"]: 1,\n      },\n    };\n    await contractProcessor.fetch({\n      params: options,\n      onSuccess: () => console.log(\"success\"),\n      onError: (error) => console.error(error),\n    });\n  }\n\n  const actions = [\n    <Button\n      style={{\n        marginTop: \"10px\",\n        marginBottom: \"10px\",\n      }}\n      shape=\"round\"\n      onClick={toggleShowAddComment}\n    >\n      Comment\n    </Button>,\n\n    <Tooltip key=\"comment-basic-like\" title=\"Vote Up\">\n      <span\n        style={{\n          marginTop: \"10px\",\n          marginBottom: \"10px\",\n          paddingRight: \"5px\",\n          paddingLeft: \"10px\",\n          fontSize: \"15px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          marginRight: \"16px\",\n        }}\n        onClick={() => vote(\"voteUp\")}\n      >\n        {createElement(voteStatus === \"liked\" ? LikeFilled : LikeOutlined)} Vote\n        Up\n      </span>\n    </Tooltip>,\n    <span style={{ fontSize: \"15px\" }}>\n      <Votes postId={postId} />\n    </span>,\n    <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n      <span\n        style={{\n          marginTop: \"10px\",\n          marginBottom: \"10px\",\n          paddingRight: \"5px\",\n          paddingLeft: \"5px\",\n          marginRight: \"50px\",\n          fontSize: \"15px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          marginLeft: \"8px\",\n        }}\n        onClick={() => vote(\"voteDown\")}\n      >\n        {createElement(\n          voteStatus === \"disliked\" ? DislikeFilled : DislikeOutlined\n        )}{\" \"}\n        Vote Down\n      </span>\n    </Tooltip>,\n\n    <Feed\n      style={{\n        paddingLeft: \"10px\",\n        fontSize: \"15px\",\n        display: \"inline-block\",\n        alignItems: \"center\",\n        marginLeft: \"8px\",\n      }}\n      parentId={post.postId}\n    />,\n  ];\n\n  const loading = \"\";\n\n  const result = (\n    <Comment\n      style={{\n        ...glStyles.card,\n        padding: \"0px 15px\",\n        marginBottom: \"10px\",\n        boxShadow:\n          \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n      }}\n      actions={actions}\n      content={\n        <>\n          <Text strong style={{ fontSize: \"20px\", color: \"#333\" }}>\n            {postContent[\"title\"]}\n          </Text>\n          <p style={{ fontSize: \"15px\", color: \"#111\" }}>\n            {postContent[\"content\"]}\n          </p>\n          {postContent[\"image\"] !== undefined ? (\n            <img\n              src={postContent[\"image\"]}\n              alt=\"img\"\n              style={{\n                display: \"block\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                width: \"50%\",\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n          <Divider style={{ margin: \"15px 0\" }} />\n          <>{showAddComment ? <AddComment parentId={post.postId} /> : \"\"}</>\n          <Donate postOwner={post.postOwner} postId={post.postId} />\n        </>\n      }\n    />\n  );\n  return postContent[\"title\"] === \"default\" ? loading : result;\n};\n\nexport default Post;\n","import { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { useMoralisQuery } from \"react-moralis\";\nimport Post from \"./Post\";\n\nconst Posts = () => {\n  const { selectedCategory } = useMoralisDapp();\n  const queryPost = useMoralisQuery(\n    \"Posts\",\n    (query) =>\n      query\n        .equalTo(\"categoryId\", selectedCategory[\"categoryId\"])\n        .equalTo(\n          \"parentId\",\n          \"0x9100000000000000000000000000000000000000000000000000000000000000\"\n        ),\n    [selectedCategory],\n    { live: true }\n  );\n\n  const fetchedPosts = JSON.parse(\n    JSON.stringify(queryPost.data, [\"postId\", \"contentId\", \"postOwner\"])\n  ).reverse();\n  const havePosts = fetchedPosts.length > 0 ? true : false;\n\n  const emptyResult = (\n    <div>\n      <h3>Be the first to post here for</h3>\n      <h3>{selectedCategory[\"category\"]} </h3>\n    </div>\n  );\n\n  const postResult = (\n    <div>\n      {fetchedPosts.map((post) => (\n        <Post key={post[\"postId\"]} post={post} />\n      ))}\n    </div>\n  );\n\n  return havePosts ? postResult : emptyResult;\n};\n\nexport default Posts;\n","import { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { useMoralisQuery, useMoralis, } from \"react-moralis\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst Reputation = () => {\n    const {Moralis} = useMoralis();\n    const { walletAddress, contractABI, contractAddress, selectedCategory} = useMoralisDapp();\n    const [reputationValue, setReputation] = useState(0);\n    const contractABIJson = JSON.parse(contractABI)\n    \n    const { data: votes } = useMoralisQuery(\"Votes\", (query) => query.equalTo(\"postOwner\", walletAddress), [], {\n        live: true,\n      });\n    \n    const categoryId = selectedCategory[\"categoryId\"]\n\n    const options = {\n        contractAddress: contractAddress,\n        functionName: \"getReputation\",\n        abi: contractABIJson,\n        params: {\n            _address: walletAddress,\n            _categoryID:categoryId\n        }\n    };\n    \n    useEffect(() => {\n    \n      async function getReputation() {\n        await Moralis.enableWeb3();\n        const result = await Moralis.executeFunction(options);\n        setReputation(result);\n      }\n    \n        getReputation();\n      }, [votes, walletAddress, categoryId]);\n\n    return (\n        <>{reputationValue}</>\n    )\n}\n\nexport default Reputation\n","import { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { useMoralisFile } from \"react-moralis\";\nimport { useWeb3ExecuteFunction } from \"react-moralis\";\nimport { useState } from \"react\";\nimport { message } from \"antd\";\n\nconst AddPost = () => {\n  const { contractABI, contractAddress, selectedCategory } = useMoralisDapp();\n  const contractABIJson = JSON.parse(contractABI);\n  const ipfsProcessor = useMoralisFile();\n  const contractProcessor = useWeb3ExecuteFunction();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [file, setFile] = useState();\n\n  async function addPost(post) {\n    const contentUri = await processContent(post);\n    const categoryId = selectedCategory[\"categoryId\"];\n    const options = {\n      contractAddress: contractAddress,\n      functionName: \"createPost\",\n      abi: contractABIJson,\n      params: {\n        _parentId: \"0x91\",\n        _contentUri: contentUri,\n        _categoryId: categoryId,\n      },\n    };\n    await contractProcessor.fetch({\n      params: options,\n      onSuccess: () => message.success(\"success\"),\n      onError: (error) => message.error(error),\n    });\n  }\n\n  const processContent = async () => {\n    const imageUrl = file !== undefined ? await processImage(file) : undefined;\n\n    const params = {\n      title: title,\n      content: content,\n      image: imageUrl,\n    };\n    const ipfsResult = await ipfsProcessor.saveFile(\n      \"post.json\",\n      { base64: btoa(JSON.stringify(params)) },\n      { saveIPFS: true }\n    );\n    return ipfsResult._ipfs;\n  };\n\n  const processImage = async () => {\n    const ipfsResult = await ipfsProcessor.saveFile(\"image.jpg\", file, {\n      type: \"image/jpeg\",\n      saveIPFS: true,\n    });\n    return ipfsResult._ipfs;\n  };\n\n  const validateForm = () => {\n    let result = !title || !content ? false : true;\n    return result;\n  };\n\n  const clearForm = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setFile(\"\");\n  };\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (!validateForm()) {\n      return message.error(\n        \"Remember to add the title and the content of your post\"\n      );\n    }\n    addPost({ title, content });\n    clearForm();\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className='row'>\n        <div className='form-group'>\n          <input\n            type='text'\n            className='mb-2 mt-2 form-control'\n            placeholder='Title'\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <textarea\n            type='text'\n            className='mb-2 form-control'\n            placeholder='Post away'\n            rows='5'\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n          />\n          <input\n            type='file'\n            className='mb-2 mt-2 form-control'\n            value={null}\n            onChange={async (e) => setFile(e.target.files[0])}\n          />\n        </div>\n        <button type='submit' className='btn btn-dark'>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddPost;\n","import { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { useState } from \"react\";\nimport Posts from \"./components/Posts\";\nimport Reputation from \"components/Reputation\";\nimport { Button, Typography } from \"antd\";\nimport glStyles from \"components/gstyles\";\nimport AddPost from \"./components/AddPost\";\n\nconst Feed = () => {\n  const { selectedCategory } = useMoralisDapp();\n  const [showAddPost, setShowAddPost] = useState(false);\n  const { Title, Paragraph } = Typography;\n  let result = null;\n\n  function toogleShowAddPost() {\n    setShowAddPost(!showAddPost);\n  }\n\n  if (selectedCategory[\"category\"] === \"default\") {\n    result = (\n      <div className=\"col-lg-9\">\n        <div\n          style={{\n            ...glStyles.card,\n            padding: \"10px 50px 20px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Typography>\n            <Paragraph>\n              <p\n                style={{\n                  display: \"block\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  margin: \"auto\",\n                  width: \"100%\",\n                  fontFamily: \"Poppins\",\n                  textAlign: \"center\",\n                }}\n              >\n                <img\n                  style={{\n                    display: \"inline-block\",\n                    verticalAlign: \"middle\",\n                    marginLeft: \"10rem\",\n                  }}\n                  src={\n                    \"https://content.presspage.com/uploads/2658/c800_logo-stackoverflow-square.jpg?98978\"\n                  }\n                  alt=\"Polytter\"\n                  width=\"200\"\n                  height=\"200\"\n                />\n              </p>\n              <div\n                style={{\n                  textAlign: \"center\",\n                  marginLeft: \"11rem\",\n                  fontFamily: \"Libre Baskerville\",\n                }}\n              >\n                <Title level={3}>Stack Overflow 3.0</Title>\n              </div>\n            </Paragraph>\n            <Paragraph>\n              <p\n                style={{\n                  paddingBottom: \"3rem\",\n                }}\n              />\n              Post your questions !!\n            </Paragraph>\n            <Paragraph>\n              All the data gets stored on Polygon Blockchain, completely\n              decentralised StackOverflow.\n            </Paragraph>\n            <Paragraph>\n              Reputation system works on the basis of upvotes and downvotes. Tip\n              the answers you like!!\n            </Paragraph>\n            <Paragraph> Currently works on Polygon Mumbai Testnet.</Paragraph>\n\n            <div style={{ textAlign: \"center\", marginLeft: \"11rem\" }}>\n              <Title level={5}>\n                <p\n                  style={{\n                    paddingBottom: \"3rem\",\n                  }}\n                />\n                The legendary StackOverflow website is now on Web3.\n              </Title>\n            </div>\n          </Typography>\n        </div>\n      </div>\n    );\n  } else {\n    result = (\n      <div className=\"col-lg-9\">\n        <div\n          style={{\n            ...glStyles.card,\n            padding: \"10px 13px\",\n            marginBottom: \"10px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <h4 style={{ fontFamily: \"Libre Baskerville\" }}>\n            {\" \"}\n            Your Reputation in {selectedCategory[\"category\"]} is <Reputation />{\" \"}\n          </h4>\n          <Button shape=\"round\" onClick={toogleShowAddPost}>\n            Post\n          </Button>\n        </div>\n        {showAddPost ? <AddPost /> : \"\"}\n        <Posts />\n      </div>\n    );\n  }\n\n  return result;\n};\n\nexport default Feed;\n","import { useMoralisQuery } from \"react-moralis\";\nimport Categories from \"./Categories\"\nimport Feed from \"./Feed\"\n\nconst Main = () => {\n    const queryCategories = useMoralisQuery(\"Categories\");\n    const fetchedCategories = JSON.parse(JSON.stringify(queryCategories.data, [\"categoryId\", \"category\"]));\n\n    console.log(fetchedCategories)\n    return (\n        <div className=\"container\">\n            <div style={{\n                display: \"flex\",\n                fontFamily: \"Roboto, sans-serif\",\n                color: \"#041836\",\n                padding: \"10px 30px\",\n                maxWidth: \"1200px\",\n                width: \"100%\",\n                gap: \"20px\",\n                }}>\n                <Categories categories={fetchedCategories}/>\n                <Feed/>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Main","import { useEffect } from \"react\";\nimport { useMoralis } from \"react-moralis\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Account from \"components/Account\";\nimport Chains from \"components/Chains\";\nimport { Layout } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./style.css\";\nimport Main from \"components/Main\";\nconst { Header } = Layout;\n\nconst styles = {\n  content: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    fontFamily: \"Roboto, sans-serif\",\n    color: \"#041836\",\n    marginTop: \"130px\",\n    padding: \"10px\",\n  },\n  header: {\n    position: \"fixed\",\n    zIndex: 1,\n    width: \"100%\",\n    background: \"#fff\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    fontFamily: \"Roboto, sans-serif\",\n    borderBottom: \"2px solid rgba(0, 0, 0, 0.06)\",\n    padding: \"0 10px\",\n    boxShadow: \"0 1px 10px rgb(151 164 175 / 10%)\",\n  },\n  headerRight: {\n    display: \"flex\",\n    gap: \"20px\",\n    alignItems: \"center\",\n    fontSize: \"15px\",\n    fontWeight: \"600\",\n  },\n};\nconst App = ({ isServerInfo }) => {\n  const { isWeb3Enabled, enableWeb3, isAuthenticated, isWeb3EnableLoading } =\n    useMoralis();\n\n  useEffect(() => {\n    if (isAuthenticated && !isWeb3Enabled && !isWeb3EnableLoading) enableWeb3();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAuthenticated, isWeb3Enabled]);\n\n  return (\n    <Layout style={{ height: \"100vh\", overflow: \"auto\" }}>\n      <Router>\n        <Header style={styles.header}>\n          <Logo />\n          <div style={styles.headerRight}>\n            <Chains />\n            <Account />\n          </div>\n        </Header>\n        <div style={styles.content}>\n          <Switch>\n            <Route path=\"/main\">\n              <Main />\n            </Route>\n            <Route path=\"/nonauthenticated\">\n              <h3>Please login using the \"Authenticate\" button</h3>\n            </Route>\n          </Switch>\n          {isAuthenticated ? (\n            <Redirect to=\"/main\" />\n          ) : (\n            <Redirect to=\"/nonauthenticated\" />\n          )}\n        </div>\n      </Router>\n    </Layout>\n  );\n};\n\nexport const Logo = () => (\n  <div style={{ display: \"flex\", alignItems: \"center\" }}>\n    <img\n      height=\"30px\"\n      width=\"30px\"\n      alt=\"overflowlogo\"\n      src=\"https://user-images.githubusercontent.com/81305824/149787348-2b8f1b69-5c2b-486d-8713-3fb2646895a9.png\"\n    />\n    <h4 style={{ marginLeft: \"0.2rem\", fontFamily: \"Cormorant Garamond\" }}>\n      Stake Overflow\n    </h4>\n  </div>\n);\n\nexport default App;\n\n//\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { MoralisProvider } from \"react-moralis\";\nimport \"./index.css\";\nimport { MoralisDappProvider } from \"./providers/MoralisDappProvider/MoralisDappProvider\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n/** Get your free Moralis Account https://moralis.io/ */\n\nconst APP_ID = \"5RjPzxxFonTsBrJeGBs2X5lJR4lh6kJClOXTpo8f\";\nconst SERVER_URL = \"https://ynezdcs2c9gy.usemoralis.com:2053/server\";\n\nconst Application = () => {\n  const isServerInfo = APP_ID && SERVER_URL ? true : false;\n  if (isServerInfo)\n    return (\n      <MoralisProvider appId={APP_ID} serverUrl={SERVER_URL}>\n        <MoralisDappProvider>\n          <App isServerInfo />\n        </MoralisDappProvider>\n      </MoralisProvider>\n    );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"https://saviour1001.github.io/moralisweeklychallenge/\">\n      <Application />,\n    </Router>\n    ,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}